
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BenefitScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  type: 'type',
  active: 'active',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmployeeTypeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  active: 'active',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PositionScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  active: 'active',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  active: 'active',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserBasicInfoScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  firstName: 'firstName',
  middleName: 'middleName',
  lastName: 'lastName',
  birthdate: 'birthdate',
  mobileNumber: 'mobileNumber',
  maritalStatus: 'maritalStatus',
  gender: 'gender',
  nationality: 'nationality',
  provinceCode: 'provinceCode',
  cityCode: 'cityCode',
  brangayCode: 'brangayCode',
  zipCode: 'zipCode',
  address: 'address'
};

exports.Prisma.UserEmploymentBackgroundScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  company: 'company',
  position: 'position',
  dateStart: 'dateStart',
  dateEnd: 'dateEnd'
};

exports.Prisma.UserEducationalBackgroundScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  school: 'school',
  level: 'level',
  dateStart: 'dateStart',
  dateEnd: 'dateEnd'
};

exports.Prisma.UserEmployementInfoScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  employeeId: 'employeeId',
  salary: 'salary',
  dateRegularization: 'dateRegularization',
  dateStart: 'dateStart',
  dateEnd: 'dateEnd'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  keycloakId: 'keycloakId',
  email: 'email',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserBenefitScalarFieldEnum = {
  userId: 'userId',
  benefitId: 'benefitId',
  amount: 'amount'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.BenefitType = exports.$Enums.BenefitType = {
  DEBIT: 'DEBIT',
  CREDIT: 'CREDIT'
};

exports.MaritalStatus = exports.$Enums.MaritalStatus = {
  SINGLE: 'SINGLE',
  MARRIED: 'MARRIED',
  WIDOWED: 'WIDOWED',
  DIVORCED: 'DIVORCED'
};

exports.Gender = exports.$Enums.Gender = {
  MALE: 'MALE',
  FEMALE: 'FEMALE'
};

exports.Nationality = exports.$Enums.Nationality = {
  AFGHAN: 'AFGHAN',
  ALBANIAN: 'ALBANIAN',
  ALGERIAN: 'ALGERIAN',
  AMERICAN: 'AMERICAN',
  ANDORRAN: 'ANDORRAN',
  ANGOLAN: 'ANGOLAN',
  ANTIGUAN: 'ANTIGUAN',
  ARGENTINE: 'ARGENTINE',
  ARMENIAN: 'ARMENIAN',
  AUSTRALIAN: 'AUSTRALIAN',
  AUSTRIAN: 'AUSTRIAN',
  AZERBAIJANI: 'AZERBAIJANI',
  BAHAMIAN: 'BAHAMIAN',
  BAHRAINI: 'BAHRAINI',
  BANGLADESHI: 'BANGLADESHI',
  BARBADIAN: 'BARBADIAN',
  BELARUSIAN: 'BELARUSIAN',
  BELGIAN: 'BELGIAN',
  BELIZEAN: 'BELIZEAN',
  BENINESE: 'BENINESE',
  BHUTANESE: 'BHUTANESE',
  BOLIVIAN: 'BOLIVIAN',
  BOSNIAN: 'BOSNIAN',
  BOTSWANAN: 'BOTSWANAN',
  BRAZILIAN: 'BRAZILIAN',
  BRITISH: 'BRITISH',
  BRUNEIAN: 'BRUNEIAN',
  BULGARIAN: 'BULGARIAN',
  BURKINABE: 'BURKINABE',
  BURMESE: 'BURMESE',
  BURUNDIAN: 'BURUNDIAN',
  CAMBODIAN: 'CAMBODIAN',
  CAMEROONIAN: 'CAMEROONIAN',
  CANADIAN: 'CANADIAN',
  CAPE_VERDEAN: 'CAPE_VERDEAN',
  CENTRAL_AFRICAN: 'CENTRAL_AFRICAN',
  CHADIAN: 'CHADIAN',
  CHILEAN: 'CHILEAN',
  CHINESE: 'CHINESE',
  COLOMBIAN: 'COLOMBIAN',
  COMORAN: 'COMORAN',
  CONGOLESE: 'CONGOLESE',
  COSTA_RICAN: 'COSTA_RICAN',
  CROATIAN: 'CROATIAN',
  CUBAN: 'CUBAN',
  CYPRIOT: 'CYPRIOT',
  CZECH: 'CZECH',
  DANISH: 'DANISH',
  DJIBOUTIAN: 'DJIBOUTIAN',
  DOMINICAN: 'DOMINICAN',
  DUTCH: 'DUTCH',
  EAST_TIMORESE: 'EAST_TIMORESE',
  ECUADORIAN: 'ECUADORIAN',
  EGYPTIAN: 'EGYPTIAN',
  EMIRATI: 'EMIRATI',
  ENGLISH: 'ENGLISH',
  EQUATOGUINEAN: 'EQUATOGUINEAN',
  ERITREAN: 'ERITREAN',
  ESTONIAN: 'ESTONIAN',
  ETHIOPIAN: 'ETHIOPIAN',
  FIJIAN: 'FIJIAN',
  FILIPINO: 'FILIPINO',
  FINNISH: 'FINNISH',
  FRENCH: 'FRENCH',
  GABONESE: 'GABONESE',
  GAMBIAN: 'GAMBIAN',
  GEORGIAN: 'GEORGIAN',
  GERMAN: 'GERMAN',
  GHANAIAN: 'GHANAIAN',
  GREEK: 'GREEK',
  GRENADIAN: 'GRENADIAN',
  GUATEMALAN: 'GUATEMALAN',
  GUINEAN: 'GUINEAN',
  GUINEA_BISSAUAN: 'GUINEA_BISSAUAN',
  GUYANESE: 'GUYANESE',
  HAITIAN: 'HAITIAN',
  HERZEGOVINIAN: 'HERZEGOVINIAN',
  HONDURAN: 'HONDURAN',
  HUNGARIAN: 'HUNGARIAN',
  ICELANDIC: 'ICELANDIC',
  INDIAN: 'INDIAN',
  INDONESIAN: 'INDONESIAN',
  IRANIAN: 'IRANIAN',
  IRAQI: 'IRAQI',
  IRISH: 'IRISH',
  ISRAELI: 'ISRAELI',
  ITALIAN: 'ITALIAN',
  IVORIAN: 'IVORIAN',
  JAMAICAN: 'JAMAICAN',
  JAPANESE: 'JAPANESE',
  JORDANIAN: 'JORDANIAN',
  KAZAKHSTANI: 'KAZAKHSTANI',
  KENYAN: 'KENYAN',
  KIRIBATI: 'KIRIBATI',
  KOREAN: 'KOREAN',
  KOSOVAR: 'KOSOVAR',
  KUWAITI: 'KUWAITI',
  KYRGYZ: 'KYRGYZ',
  LAOTIAN: 'LAOTIAN',
  LATVIAN: 'LATVIAN',
  LEBANESE: 'LEBANESE',
  LIBERIAN: 'LIBERIAN',
  LIBYAN: 'LIBYAN',
  LIECHTENSTEINER: 'LIECHTENSTEINER',
  LITHUANIAN: 'LITHUANIAN',
  LUXEMBOURGER: 'LUXEMBOURGER',
  MACEDONIAN: 'MACEDONIAN',
  MALAGASY: 'MALAGASY',
  MALAWIAN: 'MALAWIAN',
  MALAYSIAN: 'MALAYSIAN',
  MALDIVIAN: 'MALDIVIAN',
  MALIEN: 'MALIEN',
  MALTESE: 'MALTESE',
  MARSHALLESE: 'MARSHALLESE',
  MAURITANIAN: 'MAURITANIAN',
  MAURITIAN: 'MAURITIAN',
  MEXICAN: 'MEXICAN',
  MICRONESIAN: 'MICRONESIAN',
  MOLDOVAN: 'MOLDOVAN',
  MONACAN: 'MONACAN',
  MONGOLIAN: 'MONGOLIAN',
  MONTENEGRIN: 'MONTENEGRIN',
  MOROCCAN: 'MOROCCAN',
  MOSOTHO: 'MOSOTHO',
  MOZAMBICAN: 'MOZAMBICAN',
  NAMIBIAN: 'NAMIBIAN',
  NAURUAN: 'NAURUAN',
  NEPALESE: 'NEPALESE',
  NEW_ZEALANDER: 'NEW_ZEALANDER',
  NICARAGUAN: 'NICARAGUAN',
  NIGERIEN: 'NIGERIEN',
  NIGERIAN: 'NIGERIAN',
  NORWEGIAN: 'NORWEGIAN',
  OMANI: 'OMANI',
  PAKISTANI: 'PAKISTANI',
  PALAUAN: 'PALAUAN',
  PALESTINIAN: 'PALESTINIAN',
  PANAMANIAN: 'PANAMANIAN',
  PAPUA_NEW_GUINEAN: 'PAPUA_NEW_GUINEAN',
  PARAGUAYAN: 'PARAGUAYAN',
  PERUVIAN: 'PERUVIAN',
  POLISH: 'POLISH',
  PORTUGUESE: 'PORTUGUESE',
  QATARI: 'QATARI',
  ROMANIAN: 'ROMANIAN',
  RUSSIAN: 'RUSSIAN',
  RWANDAN: 'RWANDAN',
  SAINT_LUCIAN: 'SAINT_LUCIAN',
  SALVADORAN: 'SALVADORAN',
  SAMOAN: 'SAMOAN',
  SAN_MARINESE: 'SAN_MARINESE',
  SAO_TOMEAN: 'SAO_TOMEAN',
  SAUDI: 'SAUDI',
  SCOTTISH: 'SCOTTISH',
  SENEGALESE: 'SENEGALESE',
  SERBIAN: 'SERBIAN',
  SEYCHELLOIS: 'SEYCHELLOIS',
  SIERRA_LEONEAN: 'SIERRA_LEONEAN',
  SINGAPOREAN: 'SINGAPOREAN',
  SLOVAK: 'SLOVAK',
  SLOVENIAN: 'SLOVENIAN',
  SOLOMON_ISLANDER: 'SOLOMON_ISLANDER',
  SOMALI: 'SOMALI',
  SOUTH_AFRICAN: 'SOUTH_AFRICAN',
  SPANISH: 'SPANISH',
  SRI_LANKAN: 'SRI_LANKAN',
  SUDANESE: 'SUDANESE',
  SURINAMESE: 'SURINAMESE',
  SWAZI: 'SWAZI',
  SWEDISH: 'SWEDISH',
  SWISS: 'SWISS',
  SYRIAN: 'SYRIAN',
  TAIWANESE: 'TAIWANESE',
  TAJIK: 'TAJIK',
  TANZANIAN: 'TANZANIAN',
  THAI: 'THAI',
  TOGOLESE: 'TOGOLESE',
  TONGAN: 'TONGAN',
  TRINIDADIAN: 'TRINIDADIAN',
  TUNISIAN: 'TUNISIAN',
  TURKISH: 'TURKISH',
  TURKMEN: 'TURKMEN',
  TUVALUAN: 'TUVALUAN',
  UGANDAN: 'UGANDAN',
  UKRAINIAN: 'UKRAINIAN',
  URUGUAYAN: 'URUGUAYAN',
  UZBEK: 'UZBEK',
  VATICAN: 'VATICAN',
  VENEZUELAN: 'VENEZUELAN',
  VIETNAMESE: 'VIETNAMESE',
  WELSH: 'WELSH',
  YEMENI: 'YEMENI',
  ZAMBIAN: 'ZAMBIAN',
  ZIMBABWEAN: 'ZIMBABWEAN'
};

exports.Prisma.ModelName = {
  Benefit: 'Benefit',
  EmployeeType: 'EmployeeType',
  Position: 'Position',
  Task: 'Task',
  UserBasicInfo: 'UserBasicInfo',
  UserEmploymentBackground: 'UserEmploymentBackground',
  UserEducationalBackground: 'UserEducationalBackground',
  UserEmployementInfo: 'UserEmployementInfo',
  User: 'User',
  UserBenefit: 'UserBenefit'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/jl/Projects/ess/server/prisma/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/jl/Projects/ess/server/prisma/schema/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../schema",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "/// `DEBIT` — System will deduct from balance\n/// `CREDIT` — System will add to balance\nenum BenefitType {\n  DEBIT\n  CREDIT\n}\n\nmodel Benefit {\n  id          Int         @id @default(autoincrement()) @map(\"id\")\n  code        String      @unique @db.VarChar(30)\n  name        String      @unique @db.VarChar(60)\n  type        BenefitType\n  active      Boolean     @default(true) @map(\"is_active\")\n  description String?     @db.VarChar(255)\n  createdAt   DateTime    @default(now()) @map(\"created_at\")\n  updatedAt   DateTime    @updatedAt @map(\"updated_at\")\n\n  userAllowance UserBenefit[]\n\n  @@index([code])\n  @@index([active])\n  @@index([name])\n  @@index([code, active])\n  @@map(\"benefit\")\n}\n\nmodel EmployeeType {\n  id          Int      @id @default(autoincrement())\n  code        String   @unique @db.VarChar(15)\n  name        String   @unique @db.VarChar(60)\n  active      Boolean  @default(true) @map(\"is_active\")\n  description String?  @db.VarChar(255)\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  user User[]\n\n  @@index([code])\n  @@index([active])\n  @@index([name])\n  @@index([code, active])\n  @@map(\"employee_type\")\n}\n\n// model ProjectStatus {\n//   id Int @id @default(autoincrement())\n//   name String @db.VarChar(60) @unique\n//   active Boolean @default(true) @map(\"is_active\")\n//   description String @db.VarChar(255)\n//   createdAt DateTime @default(now()) @map(\"created_at\")\n//   updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n//   @@map(\"project_status\")\n// }\n\nmodel Position {\n  id          Int      @id @default(autoincrement())\n  code        String   @unique @db.VarChar(20)\n  name        String   @unique @db.VarChar(60)\n  active      Boolean  @default(true) @map(\"is_active\")\n  description String?  @db.VarChar(255)\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  user User[]\n\n  @@index([code])\n  @@index([active])\n  @@index([name])\n  @@index([code, active])\n  @@map(\"position\")\n}\n\nmodel Task {\n  id          Int      @id @default(autoincrement())\n  code        String   @unique @db.VarChar(30)\n  name        String   @unique @db.VarChar(60)\n  active      Boolean  @default(true) @map(\"is_active\")\n  description String?  @db.VarChar(255)\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  @@index([code])\n  @@index([active])\n  @@index([name])\n  @@index([code, active])\n  @@map(\"task\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum MaritalStatus {\n  SINGLE\n  MARRIED\n  WIDOWED\n  DIVORCED\n}\n\nenum Gender {\n  MALE\n  FEMALE\n}\n\nenum Nationality {\n  AFGHAN\n  ALBANIAN\n  ALGERIAN\n  AMERICAN\n  ANDORRAN\n  ANGOLAN\n  ANTIGUAN\n  ARGENTINE\n  ARMENIAN\n  AUSTRALIAN\n  AUSTRIAN\n  AZERBAIJANI\n  BAHAMIAN\n  BAHRAINI\n  BANGLADESHI\n  BARBADIAN\n  BELARUSIAN\n  BELGIAN\n  BELIZEAN\n  BENINESE\n  BHUTANESE\n  BOLIVIAN\n  BOSNIAN\n  BOTSWANAN\n  BRAZILIAN\n  BRITISH\n  BRUNEIAN\n  BULGARIAN\n  BURKINABE\n  BURMESE\n  BURUNDIAN\n  CAMBODIAN\n  CAMEROONIAN\n  CANADIAN\n  CAPE_VERDEAN\n  CENTRAL_AFRICAN\n  CHADIAN\n  CHILEAN\n  CHINESE\n  COLOMBIAN\n  COMORAN\n  CONGOLESE\n  COSTA_RICAN\n  CROATIAN\n  CUBAN\n  CYPRIOT\n  CZECH\n  DANISH\n  DJIBOUTIAN\n  DOMINICAN\n  DUTCH\n  EAST_TIMORESE\n  ECUADORIAN\n  EGYPTIAN\n  EMIRATI\n  ENGLISH\n  EQUATOGUINEAN\n  ERITREAN\n  ESTONIAN\n  ETHIOPIAN\n  FIJIAN\n  FILIPINO\n  FINNISH\n  FRENCH\n  GABONESE\n  GAMBIAN\n  GEORGIAN\n  GERMAN\n  GHANAIAN\n  GREEK\n  GRENADIAN\n  GUATEMALAN\n  GUINEAN\n  GUINEA_BISSAUAN\n  GUYANESE\n  HAITIAN\n  HERZEGOVINIAN\n  HONDURAN\n  HUNGARIAN\n  ICELANDIC\n  INDIAN\n  INDONESIAN\n  IRANIAN\n  IRAQI\n  IRISH\n  ISRAELI\n  ITALIAN\n  IVORIAN\n  JAMAICAN\n  JAPANESE\n  JORDANIAN\n  KAZAKHSTANI\n  KENYAN\n  KIRIBATI\n  KOREAN\n  KOSOVAR\n  KUWAITI\n  KYRGYZ\n  LAOTIAN\n  LATVIAN\n  LEBANESE\n  LIBERIAN\n  LIBYAN\n  LIECHTENSTEINER\n  LITHUANIAN\n  LUXEMBOURGER\n  MACEDONIAN\n  MALAGASY\n  MALAWIAN\n  MALAYSIAN\n  MALDIVIAN\n  MALIEN\n  MALTESE\n  MARSHALLESE\n  MAURITANIAN\n  MAURITIAN\n  MEXICAN\n  MICRONESIAN\n  MOLDOVAN\n  MONACAN\n  MONGOLIAN\n  MONTENEGRIN\n  MOROCCAN\n  MOSOTHO\n  MOZAMBICAN\n  NAMIBIAN\n  NAURUAN\n  NEPALESE\n  NEW_ZEALANDER\n  NICARAGUAN\n  NIGERIEN\n  NIGERIAN\n  NORWEGIAN\n  OMANI\n  PAKISTANI\n  PALAUAN\n  PALESTINIAN\n  PANAMANIAN\n  PAPUA_NEW_GUINEAN\n  PARAGUAYAN\n  PERUVIAN\n  POLISH\n  PORTUGUESE\n  QATARI\n  ROMANIAN\n  RUSSIAN\n  RWANDAN\n  SAINT_LUCIAN\n  SALVADORAN\n  SAMOAN\n  SAN_MARINESE\n  SAO_TOMEAN\n  SAUDI\n  SCOTTISH\n  SENEGALESE\n  SERBIAN\n  SEYCHELLOIS\n  SIERRA_LEONEAN\n  SINGAPOREAN\n  SLOVAK\n  SLOVENIAN\n  SOLOMON_ISLANDER\n  SOMALI\n  SOUTH_AFRICAN\n  SPANISH\n  SRI_LANKAN\n  SUDANESE\n  SURINAMESE\n  SWAZI\n  SWEDISH\n  SWISS\n  SYRIAN\n  TAIWANESE\n  TAJIK\n  TANZANIAN\n  THAI\n  TOGOLESE\n  TONGAN\n  TRINIDADIAN\n  TUNISIAN\n  TURKISH\n  TURKMEN\n  TUVALUAN\n  UGANDAN\n  UKRAINIAN\n  URUGUAYAN\n  UZBEK\n  VATICAN\n  VENEZUELAN\n  VIETNAMESE\n  WELSH\n  YEMENI\n  ZAMBIAN\n  ZIMBABWEAN\n}\n\nmodel UserBasicInfo {\n  id            Int           @id @default(autoincrement())\n  userId        String        @map(\"user_id\")\n  firstName     String        @map(\"first_name\") @db.VarChar(60)\n  middleName    String        @map(\"middle_name\") @db.VarChar(60)\n  lastName      String        @map(\"last_name\") @db.VarChar(60)\n  birthdate     DateTime\n  mobileNumber  String        @unique @map(\"mobile_number\") @db.VarChar(11)\n  maritalStatus MaritalStatus @map(\"marital_status\")\n  gender        Gender\n\n  nationality Nationality\n\n  provinceCode String @map(\"province_code\") @db.VarChar(5)\n  cityCode     String @map(\"city_code\") @db.VarChar(7)\n  brangayCode  String @map(\"brangay_code\") @db.VarChar(10)\n  zipCode      String @map(\"zip_code\") @db.VarChar(4)\n  address      String @db.VarChar(120)\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@map(\"user_basic_info\")\n}\n\nmodel UserEmploymentBackground {\n  id        Int      @id @default(autoincrement())\n  userId    String   @map(\"user_id\")\n  company   String   @db.VarChar(120)\n  position  String   @db.VarChar(120)\n  dateStart DateTime @map(\"date_start\")\n  dateEnd   DateTime @map(\"date_end\")\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@map(\"user_employment_background\")\n}\n\nmodel UserEducationalBackground {\n  id        Int      @id @default(autoincrement())\n  userId    String   @map(\"user_id\")\n  school    String   @db.Text\n  level     String   @db.VarChar(120)\n  dateStart DateTime @map(\"date_start\")\n  dateEnd   DateTime @map(\"date_end\")\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@map(\"user_educational_background\")\n}\n\nmodel UserEmployementInfo {\n  id                 Int      @id @default(autoincrement())\n  userId             String   @map(\"user_id\")\n  employeeId         Int      @unique @map(\"employee_id\")\n  salary             Decimal\n  dateRegularization DateTime @map(\"date_regularization\")\n  dateStart          DateTime @map(\"date_start\")\n  dateEnd            DateTime @map(\"date_end\")\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@map(\"user_employment_info\")\n}\n\nmodel User {\n  id         String   @id @default(uuid())\n  keycloakId String   @unique\n  email      String?\n  active     Boolean  @default(true) @map(\"is_active\")\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n  updatedAt  DateTime @updatedAt @map(\"updated_at\")\n\n  UserBasicInfo             UserBasicInfo[]\n  UserEmploymentBackground  UserEmploymentBackground[]\n  UserEducationalBackground UserEducationalBackground[]\n  UserEmployementInfo       UserEmployementInfo[]\n  UserBenefit               UserBenefit[]\n\n  EmployeeType EmployeeType[]\n  Position     Position[]\n\n  @@map(\"user\")\n}\n\nmodel UserBenefit {\n  userId    String  @map(\"user_id\")\n  benefitId Int     @map(\"benefit_id\")\n  amount    Decimal\n\n  user    User    @relation(fields: [userId], references: [id])\n  benefit Benefit @relation(fields: [benefitId], references: [id])\n\n  @@id([userId, benefitId])\n  @@map(\"user_benefit\")\n}\n",
  "inlineSchemaHash": "8d5eb314048d8addb764f541ca02dc76b0d8a69fcb7cfc126d00a4b384e1160b",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Benefit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"id\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"BenefitType\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"userAllowance\",\"kind\":\"object\",\"type\":\"UserBenefit\",\"relationName\":\"BenefitToUserBenefit\"}],\"dbName\":\"benefit\"},\"EmployeeType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmployeeTypeToUser\"}],\"dbName\":\"employee_type\"},\"Position\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PositionToUser\"}],\"dbName\":\"position\"},\"Task\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"task\"},\"UserBasicInfo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"middleName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"middle_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"birthdate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mobileNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mobile_number\"},{\"name\":\"maritalStatus\",\"kind\":\"enum\",\"type\":\"MaritalStatus\",\"dbName\":\"marital_status\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"nationality\",\"kind\":\"enum\",\"type\":\"Nationality\"},{\"name\":\"provinceCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"province_code\"},{\"name\":\"cityCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"city_code\"},{\"name\":\"brangayCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"brangay_code\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"zip_code\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserBasicInfo\"}],\"dbName\":\"user_basic_info\"},\"UserEmploymentBackground\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateStart\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_start\"},{\"name\":\"dateEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_end\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserEmploymentBackground\"}],\"dbName\":\"user_employment_background\"},\"UserEducationalBackground\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"school\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateStart\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_start\"},{\"name\":\"dateEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_end\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserEducationalBackground\"}],\"dbName\":\"user_educational_background\"},\"UserEmployementInfo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"employee_id\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"dateRegularization\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_regularization\"},{\"name\":\"dateStart\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_start\"},{\"name\":\"dateEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_end\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserEmployementInfo\"}],\"dbName\":\"user_employment_info\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keycloakId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"UserBasicInfo\",\"kind\":\"object\",\"type\":\"UserBasicInfo\",\"relationName\":\"UserToUserBasicInfo\"},{\"name\":\"UserEmploymentBackground\",\"kind\":\"object\",\"type\":\"UserEmploymentBackground\",\"relationName\":\"UserToUserEmploymentBackground\"},{\"name\":\"UserEducationalBackground\",\"kind\":\"object\",\"type\":\"UserEducationalBackground\",\"relationName\":\"UserToUserEducationalBackground\"},{\"name\":\"UserEmployementInfo\",\"kind\":\"object\",\"type\":\"UserEmployementInfo\",\"relationName\":\"UserToUserEmployementInfo\"},{\"name\":\"UserBenefit\",\"kind\":\"object\",\"type\":\"UserBenefit\",\"relationName\":\"UserToUserBenefit\"},{\"name\":\"EmployeeType\",\"kind\":\"object\",\"type\":\"EmployeeType\",\"relationName\":\"EmployeeTypeToUser\"},{\"name\":\"Position\",\"kind\":\"object\",\"type\":\"Position\",\"relationName\":\"PositionToUser\"}],\"dbName\":\"user\"},\"UserBenefit\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"benefitId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"benefit_id\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserBenefit\"},{\"name\":\"benefit\",\"kind\":\"object\",\"type\":\"Benefit\",\"relationName\":\"BenefitToUserBenefit\"}],\"dbName\":\"user_benefit\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

